<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bdws</groupId>
	<artifactId>BDWSDemo</artifactId>
	<version>0.0.1</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<oci.sdk.version>2.46.0</oci.sdk.version>
		<flink.version>1.15.2</flink.version>
		<flink.scala.version>2.12</flink.scala.version>
		<spark.version>3.2.1</spark.version>
		<scala.version>2.12.17</scala.version>
		<log4j.version>2.17.1</log4j.version>
		<fastjson.version>1.2.59</fastjson.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<scope.flag>provided</scope.flag>
	</properties>
	<dependencies>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		<!-- core dependencies -->
		<!--Flink-->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-java</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-scala_${flink.scala.version}</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.flink/flink-streaming-scala -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-streaming-scala_${flink.scala.version}</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-common</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-table-planner_${flink.scala.version}</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-clients</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
 		
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-files</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
 
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-kafka</artifactId>
			<version>${flink.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-connector-jdbc</artifactId>
			<version>${flink.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<!-- dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-parquet</artifactId>
			<version>${flink.version}</version>
		</dependency -->
		<!-- Spark -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_2.12</artifactId>
			<version>${spark.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_2.12</artifactId>
			<version>${spark.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<!--Scala-->
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>

		<dependency>
    		<groupId>org.apache.kafka</groupId>
    		<artifactId>kafka-clients</artifactId>
    		<version>3.2.0</version>
		</dependency>
		
	   <dependency>
    		<groupId>mysql</groupId>
    		<artifactId>mysql-connector-java</artifactId>
    		<version>8.0.27</version>
		</dependency>

		<!-- Drivers for talking to ADW. Jars need to be deployed using mvn deploy:deploy-file -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc8</artifactId>
			<version>18.3</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ucp</artifactId>
			<version>18.3</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>oraclepki</artifactId>
			<version>18.3</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>osdt_cert</artifactId>
			<version>18.3</version>
		</dependency>
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>osdt_core</artifactId>
			<version>18.3</version>
		</dependency>
		<!-- test dependencies -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils</artifactId>
			<version>${flink.version}</version>
			<scope>test</scope>
		</dependency>
 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>compile</scope>
			<version>${log4j.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<scope>compile</scope>
			<version>${log4j.version}</version>
		</dependency>
 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<scope>compile</scope>
			<version>${log4j.version}</version>
		</dependency>
		
		<dependency>
		   <groupId>com.oracle.oci.sdk</groupId>
		   <artifactId>oci-java-sdk-shaded-full</artifactId>
		   <!-- replace the version below with the latest version -->
		   <version>${oci.sdk.version}</version>
			<scope>${scope.flag}</scope>
		</dependency>
		
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<exclude>org.apache.flink:flink-shaded-force-shading</exclude>
									<exclude>com.google.code.findbugs:jsr305</exclude>
									<exclude>org.slf4j:*</exclude>
									<exclude>org.apache.logging.log4j:*</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<!-- Do not copy the signatures in the META-INF folder.
									Otherwise, this might cause SecurityExceptions when using the JAR. -->
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.aldi.flink.demo.SinkToRedis</mainClass>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>reference.conf</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>